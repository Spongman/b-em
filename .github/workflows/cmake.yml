name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  win-build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
        
    - uses: actions/checkout@v3
    #- uses: ilammy/msvc-dev-cmd
    - uses: egor-tensin/vs-shell@v2
    
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v4
      id: vcpkg
      with:
        #pkgs: allegro5 zlib
        triplet: x86-windows-release
        token: ${{ github.token }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -A Win32 ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Pack
      # Build your program with the given configuration
      run: cd  ${{github.workspace}}/build ; cpack --build -G ZIP

    - uses: actions/upload-artifact@v3
      with:
        name: win-artifact
        path: ${{github.workspace}}/build/*.zip


  linux-build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: liballegro5-dev
        
    - uses: actions/checkout@v3
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Pack
      # Build your program with the given configuration
      run: cd  ${{github.workspace}}/build ; cpack --build

    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: ${{github.workspace}}/build/*.tar.gz
